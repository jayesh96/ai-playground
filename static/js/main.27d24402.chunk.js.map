{"version":3,"sources":["components/codeEditor/index.js","components/tabs/index.js","components/image/index.js","components/button/index.js","containers/leftPanel/index.js","containers/leftPanel/actions.js","containers/leftPanel/constants.js","components/header/index.js","containers/main/index.js","App.js","serviceWorker.js","containers/leftPanel/reducer.js","containers/rightPanel/reducer.js","reducers.js","index.js","containers/rightPanel/constants.js","containers/rightPanel/index.js","containers/rightPanel/actions.js","components/loadingDots/index.js","containers/chatBox/index.js","scripts/main.js"],"names":["options","selectOnLineNumbers","roundedSelection","readOnly","cursorStyle","automaticLayout","CodeEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","code","e","onCodeChange","activeTab","editorDidMount","editor","changeEditorValue","setState","changeBySetState","state","_this$props","react_default","a","createElement","style","height","lib_default","language","theme","value","length","Component","Tabs","_ref","tabsCount","changeActiveTab","map","tab","index","key","className","classnames","onClick","Image","src","classname","alt","Button","applyChangeButtonClick","disabled","children","LeftPanel","isCodeUpdated","bind","assertThisInitialized","onApplyChangesClicked","concat","tabIndex","saveCode","get","_this2","_this$state","react","tabs","toConsumableArray","components_image","_this$state2","dist","column","tabsContainer","float","components_button","codeEditor","connect","dispatch","active","type","arguments","undefined","Header","title","Main","w","header","leftPanel","rightPanel","App","main","Boolean","window","location","hostname","match","initialState","Map","Tab0","action","set","addMessage","ADD_MESSAGE","message","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","d","__webpack_exports__","RightPanel","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","messageCount","loading","messageSubmit","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","nextProps","keyCode","which","alert","target","evaluateCode","scrollHeight","scrollTop","regex","eval","_message","replace","_context2","t0","toString","messages","react__WEBPACK_IMPORTED_MODULE_8___default","react__WEBPACK_IMPORTED_MODULE_8__","_chatBox__WEBPACK_IMPORTED_MODULE_12__","width","placeholder","onKeyPress","mapStateToProps","mapDispatchToProps","payload","_constants__WEBPACK_IMPORTED_MODULE_0__","LoadingDots","ChatBox","id","msg","borderRadius","loadingDots","jayesh","params","fetch","resp","json","data","method","headers","Accept","Content-Type","translations","translatedText","err"],"mappings":"iTAEMA,EAAU,CACdC,qBAAqB,EACrBC,kBAAkB,EAClBC,UAAU,EACVC,YAAa,OACbC,iBAAiB,GA+CJC,cA1Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,SAAW,SAACC,EAAMC,GAEhBT,EAAKD,MAAMW,aAAaF,EAAKR,EAAKD,MAAMY,YATvBX,EAYnBY,eAAiB,SAACC,GAChBb,EAAKa,OAASA,GAbGb,EAgBnBc,kBAAoB,WACdd,EAAKa,QACPb,EAAKe,SAAS,wBAlBCf,EAsBnBgB,iBAAmB,WACjBhB,EAAKe,SAAS,CAACP,KAAM,qCArBrBR,EAAKiB,MAAQ,CACXT,KAAM,2BAHSR,wEA0BV,IAAAkB,EACkBf,KAAKJ,MAAvBS,EADAU,EACAV,KAAKG,EADLO,EACKP,UACZ,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,OAAQ,UACnBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,SAAS,aACTC,MAAM,UACNC,MAAqB,IAAdnB,EAAKoB,QAA0B,IAAZjB,EAnClB,kDAmC4CH,EACpDhB,QAASA,EACTe,SAAUJ,KAAKI,SACfK,eAAgBT,KAAKS,yBArCNiB,sCCUVC,EAlBK,SAAAC,GAA4C,IAA1CC,EAA0CD,EAA1CC,UAAUrB,EAAgCoB,EAAhCpB,UAAWsB,EAAqBF,EAArBE,gBACvC,OACID,EAAUE,IAAI,SAACC,EAAKC,GAChB,OACEjB,EAAAC,EAAAC,cAAA,UACAgB,IAAKD,EACHE,UAAWC,IACT,aACA5B,IAAcyB,EAAQ,YAAc,IAEtCI,QAAS,kBAAIP,EAAgBG,KAC7BjB,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,kBAAmBH,OCLpCM,UANM,SAAAV,GAAsB,IAApBW,EAAoBX,EAApBW,IAAKC,EAAeZ,EAAfY,UACxB,OACIxB,EAAAC,EAAAC,cAAA,OAAKqB,IAAKA,EAAKJ,UAAWK,EAAWC,IAAI,OCIlCC,EAPO,SAAAd,GAA2D,IAAzDY,EAAyDZ,EAAzDY,UAAUG,EAA+Cf,EAA/Ce,uBAAuBC,EAAwBhB,EAAxBgB,SAAUC,EAAcjB,EAAdiB,SAC/D,OACI7B,EAAAC,EAAAC,cAAA,UAAQiB,UAAWK,EAAWI,SAAUA,EAAUP,QAAS,kBAAIM,MAC9DE,ICMHC,sBACJ,SAAAA,EAAYlD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACjBjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KACDkB,MAAQ,CACXiC,eAAe,EACf1C,KAAM,GACNwB,UAAW,CAAC,QACZrB,UAAW,GAEbX,EAAKU,aAAeV,EAAKU,aAAayC,KAAlBlD,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,KACpBA,EAAKiC,gBAAkBjC,EAAKiC,gBAAgBkB,KAArBlD,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,KACvBA,EAAK8C,uBAAyB9C,EAAK8C,uBAAuBK,KAA5BlD,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,KAVbA,4EAaNQ,EAAMG,GACjBR,KAAKY,SAAS,CAAEmC,eAAe,IAC/B/C,KAAKJ,MAAMsD,sBAAX,MAAAC,OAAuC3C,GAAaH,EAAMG,GAAW,2CAGvD4C,GACdpD,KAAKY,SAAS,CAAEJ,UAAW4C,EAASL,eAAc,qDAG3B,IACjB1C,GAASL,KAAKJ,MAAMyD,SAASC,IAApB,MAAAH,OAA8BnD,KAAKc,MAAMN,aAAgB,CACtEH,KAAM,GACN2B,IAAK,MAFD3B,KAINL,KAAKY,SAAS,CAAEmC,eAAe,IAC/B/C,KAAKJ,MAAMsD,sBACT,SACA7C,EACAL,KAAKc,MAAMN,WACX,2CAIY,IAAA+C,EAAAvD,KAAAwD,EACmBxD,KAAKc,MAA9Be,EADM2B,EACN3B,UAAWrB,EADLgD,EACKhD,UACnB,OACEQ,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,CACE7B,UAAWA,EACXrB,UAAWA,EACXsB,gBAAiB9B,KAAK8B,kBAExBd,EAAAC,EAAAC,cAAA,QACEiB,UAAW,SACXE,QAAS,WACPkB,EAAK3C,SAAS,CACZiB,UAAS,GAAAsB,OAAArD,OAAA6D,EAAA,EAAA7D,CAAMyD,EAAKzC,MAAMe,WAAjB,OAAAsB,OAAkCtB,EAAUJ,OAAS,SAIlET,EAAAC,EAAAC,cAAC0C,EAAD,CAAOpB,UAAW,aAAcD,IAAI,4DAMnC,IAAAsB,EAC8B7D,KAAKc,MAAlCiC,EADDc,EACCd,cAAevC,EADhBqD,EACgBrD,UACjBH,GAASL,KAAKJ,MAAMyD,SAASC,IAApB,MAAAH,OAA8B3C,KAAgB,CAC3DH,KAAM,GACN2B,IAAK,MAFD3B,KAIN,OACEW,EAAAC,EAAAC,cAAC4C,EAAA,KAAD,CAAMC,QAAM,GACV/C,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,QACbnC,KAAKgE,gBACNhD,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAE8C,MAAO,UACpBjD,EAAAC,EAAAC,cAACgD,EAAD,CACE1B,UACEO,EAAgB,oBAAsB,sBAExCH,UAAUG,EACVJ,uBAAwB3C,KAAK2C,wBAE7B3B,EAAAC,EAAAC,cAAC0C,EAAD,CACErB,IAAK,yBACLC,UAAW,0BATf,mBAeJxB,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,mBACdnB,EAAAC,EAAAC,cAACiD,EAAD,CACE5D,aAAcP,KAAKO,aACnBC,UAAWA,EACXH,KAAMA,aA1FMqB,cA8GT0C,cAZS,SAAAtD,GACtB,OAAOA,GAGkB,SAAAuD,GACzB,MAAO,CACLnB,sBAAuB,SAAChB,EAAK7B,EAAMG,EAAW8D,GAC5CD,EClHkB,SAACnC,EAAI7B,EAAKG,GAC9B,MAAO,CACH+D,KCJ0B,qBDK1BrC,IAAIA,EACJ7B,KAAKA,EACL2B,IAAIxB,EACJ8D,OANqDE,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,IAAAA,UAAA,IDkH9CnB,CAASnB,EAAK7B,EAAMG,EAAW8D,OAK/BF,CAGbtB,GG/Ga4B,UAVA,SAAA9C,GAAa,IAAX+C,EAAW/C,EAAX+C,MACb,OACI3D,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,UACZnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,gBACbwC,MCwBAC,2LAtBX,OACE5D,EAAAC,EAAAC,cAAC4C,EAAA,KAAD,CAAMC,QAAM,GACV/C,EAAAC,EAAAC,cAAC4C,EAAA,IAAD,CAAKe,EAAG,GACN7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAQH,MAAO,mBAEjB3D,EAAAC,EAAAC,cAAC4C,EAAA,IAAD,CAAKe,EAAG,GACN7D,EAAAC,EAAAC,cAAC4C,EAAA,KAAD,KACE9C,EAAAC,EAAAC,cAAC4C,EAAA,IAAD,CAAKe,EAAG,GAAO1C,UAAW,OACxBnB,EAAAC,EAAAC,cAAC6D,EAAD,OAEF/D,EAAAC,EAAAC,cAAC4C,EAAA,IAAD,CAAKe,EAAG,GAAO1C,UAAW,OAE1BnB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,iBAdOtD,cCIJuD,mLAJP,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,aAFGxD,aCOEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+ECfAC,EAAeC,YAAI,CACvBC,KAAK,CACHrF,KAAK,GACL2B,IAAI,GAENsC,OAAO,CACLjE,KAAK,GACL2B,IAAI,MAeOqB,EAXE,WAAkC,IAAjCvC,EAAiC0D,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAzBgB,EAAcG,EAAWnB,UAAA/C,OAAA,EAAA+C,UAAA,QAAAC,EACjD,OAAQkB,EAAOpB,MACb,ILhB8B,qBKgBN,OAAOzD,EAAM8E,IAAID,EAAOzD,IAAI,CAClD7B,KAAKsF,EAAOtF,KACZ2B,IAAI2D,EAAO3D,MAEb,QACE,OAAOlB,YCLE+E,EAdI,WAAwB,IAAvB/E,EAAuB0D,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAImB,EAAWnB,UAAA/C,OAAA,EAAA+C,UAAA,QAAAC,EACzC,OAAQkB,EAAOpB,MACb,KAAKuB,IACH,SAAA3C,OAAArD,OAAA6D,EAAA,EAAA7D,CACKgB,GADL,CAEE,CACEiF,QAAQJ,EAAOI,WAGrB,QACE,OAAOjF,ICREkF,cAAgB,CAC7B3C,WACAwC,eCEII,EAAQC,YAAYC,EAAYf,OAAOgB,8BAAgChB,OAAOgB,gCACpFH,EAAMI,UAAU,kBAAMC,QAAQC,IAAIN,EAAMO,WAAW,aAGnDC,IAASC,OACP1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAUV,MAAOA,GACjBjF,EAAAC,EAAAC,cAAC0F,EAAD,OAEAC,SAASC,eAAe,SJiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gDKnInBC,EAAAC,EAAAC,EAAA,sBAAAzB,IAAO,IAAMA,EAAc,8jFCOrB0B,gCACJ,SAAAA,WAAY5H,GAAO,IAAAC,EAAA,OAAAC,OAAA2H,+KAAA,EAAA3H,CAAAE,KAAAwH,aACjB3H,EAAAC,OAAA4H,0LAAA,EAAA5H,CAAAE,KAAAF,OAAA6H,+KAAA,EAAA7H,CAAA0H,YAAArH,KAAAH,KAAMJ,KACDkB,MAAQ,CACXT,KAAM,GACN0F,QAAS,GACT6B,aAAc,EACdC,SAAS,GAEXhI,EAAKiI,cAAgBjI,EAAKiI,cAAc9E,KAAnBlD,OAAAiI,sLAAA,EAAAjI,QAAAiI,sLAAA,EAAAjI,CAAAD,KARJA,qcAWOmI,GACxBhI,KAAKY,SAAS,CAAEP,KAAM2H,EAAU3H,0aAGdC,kPAEL,MADFA,EAAE2H,QAAU3H,EAAE2H,QAAU3H,EAAE4H,2BAEJ,IAA3BlI,KAAKc,MAAMT,KAAKoB,uBAClB0G,MAAM,0BACNnI,KAAKY,SAAS,CAACmF,QAAQ,mCAEvB/F,KAAKY,SAAS,CACZgH,aAAc5H,KAAKc,MAAM8G,aAAe,EACxC7B,QAAS,GACT8B,SAAS,IAEX7H,KAAKJ,MAAMiG,WAAWvF,EAAE8H,OAAO5G,iBACzBxB,KAAKqI,aAAarI,KAAKc,MAAMT,KAAMC,EAAE8H,OAAO5G,gBAC9C8G,EAAezB,SAASC,eAAe,aAC9ByB,UAAYD,EAAaA,siBAOzBjI,KAAM0F,oTACnByC,MAAQ,6BAENzC,QAAQR,MAAMiD,wDAEEC,KAAI,IAAAtF,OAAK9C,KAAL,MAAA8C,OAAc4C,QAAd,oBAAlBvE,qBACJxB,KAAKJ,MAAMiG,WAAWrE,wBAChBxB,KAAKY,SAAS,CAAEiH,SAAS,4CACxBrG,sBAEDkH,SAAW3C,QAAQ4C,QAAQ,KAAM,uBAErBF,KAAI,IAAAtF,OAAK9C,KAAL,OAAA8C,OAAeuF,SAAf,sBAAlBlH,sBACJxB,KAAKJ,MAAMiG,WAAWrE,0BAChBxB,KAAKY,SAAS,CAAEiH,SAAS,6CACxBrG,yGAGTxB,KAAKJ,MAAMiG,WAAW,SAAW+C,UAAAC,GAAIC,8BAC/B9I,KAAKY,SAAS,CAAEiH,SAAS,6CACxB,2MAIF,IAAAtE,EAAAvD,KAAAwD,EACoCxD,KAAKc,MAAxC8G,EADDpE,EACCoE,aAAc7B,EADfvC,EACeuC,QAAS8B,EADxBrE,EACwBqE,QACvBkB,EAAa/I,KAAKJ,MAAlBmJ,SACR,OACEC,2CAAA/H,EAAAC,cAAC+H,mCAAA,SAAD,KACED,2CAAA/H,EAAAC,cAACgI,uCAAA,EAAD,CACE7I,KAAML,KAAKJ,MAAMS,KACjBuH,aAAcA,EACdmB,SAAUA,EACVlB,QAASA,IAEXmB,2CAAA/H,EAAAC,cAAA,OAAKiB,UAAW,cACd6G,2CAAA/H,EAAAC,cAAA,OAAKiB,UAAW,eACd6G,2CAAA/H,EAAAC,cAAA,OAAKC,MAAO,CAAEgI,MAAO,SACnBH,2CAAA/H,EAAAC,cAAA,SACEqD,KAAK,OACL3B,WAAUiF,EACVrG,MAAOuE,EACP3F,SAAU,SAAAE,GACRiD,EAAK3C,SAAS,CAAEmF,QAASzF,EAAE8H,OAAO5G,SAEpC4H,YAAY,oBACZjH,UAAW,oBACXkH,WAAYrJ,KAAK8H,oCArFRpG,8CA+FnB4H,gBAAkB,SAAAxI,GACtB,MAAO,CACLT,KAAMS,EAAMuC,SAASC,IAAI,UAAnB,KACNyF,SAAUjI,EAAM+E,aAId0D,mBAAqB,SAAAlF,GACzB,MAAO,CACLwB,WAAY,SAAA2D,GACVnF,EAASwB,iDAAW2D,OAKXpF,0EACbkF,gBACAC,mBAFanF,CAGboD,6CCxHFH,EAAAC,EAAAC,EAAA,sBAAA1B,IAAA,IAAA4D,EAAApC,EAAA,IAEaxB,EAAa,SAACE,GACvB,MAAO,CACHxB,KAAKuB,IACLC,oGCQO2D,SAVK,WAClB,OACE1I,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,SAChBnB,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,SAChBnB,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,6BCHhBwH,0LAEM,IAAA5I,EACyCf,KAAKJ,MAA3CS,EADHU,EACGV,KAAKuH,EADR7G,EACQ6G,aAAamB,EADrBhI,EACqBgI,SAASlB,EAD9B9G,EAC8B8G,QAClC,OACI7G,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,UAAWyH,GAAG,YAC/BvJ,EAAKoB,OAAS,GAAKmG,EAAe,EACjC5G,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACGsF,EAAShH,IAAI,SAAC8H,EAAK5H,GAClB,OACEjB,EAAAC,EAAAC,cAAA,OACEiB,UACEF,EAAQ,IAAM,EACV,QACAG,IAAW,QAAS,cAE1BF,IAAKD,GACLjB,EAAAC,EAAAC,cAAA,OACEqB,IACE,yEAEFE,IAAI,GACJ0G,MAAO,OACP/H,OAAQ,OACRD,MAAO,CAAC2I,aAAc,SAExB9I,EAAAC,EAAAC,cAAA,OAAKiB,UACHF,EAAQ,IAAM,EACV,YACAG,IAAW,YAAa,oBAC3ByH,EAAI9D,aAKb,KACH8B,EACC7G,EAAAC,EAAAC,cAAA,OAAKiB,UAAWC,IAAW,QAAS,eAClCpB,EAAAC,EAAAC,cAAA,OACEqB,IACE,yEAEFE,IAAI,GACJ0G,MAAO,OACP/H,OAAQ,OACRD,MAAO,CAAC2I,aAAc,SAExB9I,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,oBACdnB,EAAAC,EAAAC,cAAC6I,EAAD,QAGF,aAnDQrI,cAyDPiI,6JC5BXK,EAAS,qGAjCFC,GACP3D,QAAQC,IAAI0D,EAAO,UAEnB,OAAOC,MADE,2FAENhD,KAAK,SAAAiD,GAAI,OAAIA,EAAKC,SAClBlD,KAAK,SAAAmD,GACJ,OAAOA,EAAI,kDAIPJ,GACR,OAAOC,MAAK,0GAAA/G,OACgG8G,EADhG,cAEV,CACEK,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,sBAInBvD,KAAK,SAAAiD,GAAI,OAAIA,EAAKC,SAClBlD,KAAK,SAAAmD,GACJ,IACE,OAAOA,EAAKA,KAAKK,aAAa,GAAGC,eAClC,MAAMC,GACL,MAAO,uCAQjBxF,OAAO4E,OAASA","file":"static/js/main.27d24402.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nconst options = {\n  selectOnLineNumbers: true,\n  roundedSelection: false,\n  readOnly: false,\n  cursorStyle: 'line',\n  automaticLayout: true,\n};\n\nconst defaultCode=\"// code changed! \\n function add(j){return j+j}\"\nclass CodeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '// type your code... \\n',\n    };\n  }\n\n  onChange = (code, e) => {\n    // this.setState({[`Tab${this.props.activeTab}`]:newValue});\n    this.props.onCodeChange(code,this.props.activeTab);\n  };\n\n  editorDidMount = (editor) => {\n    this.editor = editor;\n  };\n\n  changeEditorValue = () => {\n    if (this.editor) {\n      this.setState('// code changed! \\n');\n    }\n  };\n\n  changeBySetState = () => {\n    this.setState({code: '// code changed by setState! \\n'});\n  };\n\n  render() {\n    const {code,activeTab} = this.props;\n    return (\n      <div style={{height: '100vH'}}>\n        <MonacoEditor\n          language=\"javascript\"\n          theme=\"vs-dark\"\n          value={code.length===0 && activeTab===0?defaultCode:code}\n          options={options}\n          onChange={this.onChange}\n          editorDidMount={this.editorDidMount}\n        />\n      </div>\n    );\n  }\n}\nexport default CodeEditor;\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport const Tabs = ({tabsCount,activeTab, changeActiveTab}) => {\n    return (\n        tabsCount.map((tab, index) => {\n            return (\n              <button\n              key={index}\n                className={classnames(\n                  'tabsButton',\n                  activeTab === index ? 'activeTab' : '',\n                )}\n                onClick={()=>changeActiveTab(index)}>\n                <div className={'tabsButtonText'}>{tab}</div>\n              </button>\n            );\n          })\n    )\n}\n\nexport default Tabs;","import React from 'react';\nimport './styles.css'\n\nexport const Image = ({src, classname}) => {\n    return (\n        <img src={src} className={classname} alt=''/>\n    )\n}\n\nexport default Image;","import React from 'react';\n\nexport const Button = ({classname,applyChangeButtonClick,disabled, children}) => {\n    return (\n        <button className={classname} disabled={disabled} onClick={()=>applyChangeButtonClick()} >\n        {children}\n        </button>\n    )\n}\nexport default Button;","import React, { Component, Fragment } from \"react\";\nimport CodeEditor from \"../../components/codeEditor\";\nimport { Flex } from \"reflexbox\";\nimport { connect } from \"react-redux\";\nimport { saveCode } from \"./actions\";\nimport Tabs from \"../../components/tabs\";\nimport Image from \"../../components/image\";\nimport Button from \"../../components/button\";\n\nimport \"./styles.css\";\n\nclass LeftPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCodeUpdated: false,\n      code: \"\",\n      tabsCount: [\"Tab1\"],\n      activeTab: 0\n    };\n    this.onCodeChange = this.onCodeChange.bind(this);\n    this.changeActiveTab = this.changeActiveTab.bind(this);\n    this.applyChangeButtonClick = this.applyChangeButtonClick.bind(this);\n  }\n\n  onCodeChange(code, activeTab) {\n    this.setState({ isCodeUpdated: true });\n    this.props.onApplyChangesClicked(`Tab${activeTab}`, code, activeTab, false);\n  }\n\n  changeActiveTab(tabIndex) {\n    this.setState({ activeTab: tabIndex,isCodeUpdated:false });\n  }\n\n  applyChangeButtonClick() {\n    let { code } = this.props.saveCode.get(`Tab${this.state.activeTab}`) || {\n      code: \"\",\n      tab: \"0\"\n    };\n    this.setState({ isCodeUpdated: false });\n    this.props.onApplyChangesClicked(\n      \"active\",\n      code,\n      this.state.activeTab,\n      true\n    );\n  }\n\n  tabsContainer() {\n    const { tabsCount, activeTab } = this.state;\n    return (\n      <Fragment>\n        <Tabs\n          tabsCount={tabsCount}\n          activeTab={activeTab}\n          changeActiveTab={this.changeActiveTab}\n        />\n        <span\n          className={\"addTab\"}\n          onClick={() => {\n            this.setState({\n              tabsCount: [...this.state.tabsCount, `Tab${tabsCount.length + 1}`]\n            });\n          }}\n        >\n          <Image classname={\"addTabIcon\"} src=\"./icons/shape@3x.png\" />\n        </span>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { isCodeUpdated, activeTab } = this.state;\n    let { code } = this.props.saveCode.get(`Tab${activeTab}`) || {\n      code: \"\",\n      tab: \"0\"\n    };\n    return (\n      <Flex column>\n        <div className={\"tabs\"}>\n          {this.tabsContainer()}\n          <span style={{ float: \"right\" }}>\n            <Button\n              classname={\n                isCodeUpdated ? \"applyChangeActive\" : \"applyChangeDisabled\"\n              }\n              disabled={isCodeUpdated ? false : true}\n              applyChangeButtonClick={this.applyChangeButtonClick}\n            >\n              <Image\n                src={\"./icons/refresh@3x.png\"}\n                classname={\"applyChangeButtonIcon\"}\n              />\n              Apply Changes\n            </Button>\n          </span>\n        </div>\n        <div className={\"editorContainer\"}>\n          <CodeEditor\n            onCodeChange={this.onCodeChange}\n            activeTab={activeTab}\n            code={code}\n          />\n        </div>\n      </Flex>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onApplyChangesClicked: (key, code, activeTab, active) => {\n      dispatch(saveCode(key, code, activeTab, active));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LeftPanel);\n","import { APPLY_CODE_CHANGES } from \"./constants\";\n\nexport const saveCode = (key,code,activeTab,active=false) => {\n    return {\n        type:APPLY_CODE_CHANGES,\n        key:key,\n        code:code,\n        tab:activeTab,\n        active:active\n    }\n}\n\n","export const APPLY_CODE_CHANGES = 'APPLY_CODE_CHANGES'\nexport const CHANGE_CODE_TAB_WISE = 'CHANGE_CODE_TAB_WISE'","import React from 'react';\nimport './styles.css'\n\nconst Header = ({title}) => {\n    return (\n        <div className={'header'}>\n            <div className={'header-title'}>\n              {title}\n            </div>\n          </div>\n    )\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {Flex, Box} from 'reflexbox';\nimport RightPanel from '../rightPanel';\nimport LeftPanel from '../leftPanel';\nimport Header from '../../components/header';\nimport './styles.css';\n\nclass Main extends Component {\n  render() {\n    return (\n      <Flex column>\n        <Box w={1}>\n          <Header title={'AI Playground'}/>\n        </Box>\n        <Box w={1}>\n          <Flex>\n            <Box w={2 / 5} className={'ide'}>\n              <LeftPanel/> \n            </Box>\n            <Box w={3 / 5} className={'bot'}>\n           {\n            <RightPanel/>\n           }\n            </Box>\n          </Flex>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default Main;\n","import React, {Component} from 'react';\n// eslint-disable-next-line import/no-unresolved, import/extensions\n/* eslint-enable import/no-extraneous-dependencies */\nimport Main from './containers/main';\n// Using with webpack\nclass App extends Component {\n    render() {\n        return <Main />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { APPLY_CODE_CHANGES } from \"./constants\";\nimport { Map } from \"immutable\";\n\nconst initialState = Map({\n  Tab0:{\n    code:\"\",\n    tab:0,\n  },\n  active:{\n    code:\"\",\n    tab:\"\"\n  }\n});\n\nconst saveCode = (state = initialState, action) => {\n  switch (action.type) {\n    case APPLY_CODE_CHANGES:return state.set(action.key,{\n      code:action.code,\n      tab:action.tab,\n    });\n    default:\n      return state;\n  }\n};\n\nexport default saveCode;\n","import {ADD_MESSAGE} from './constants';\n\nconst addMessage = (state = [], action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return [\n        ...state,\n        {\n          message:action.message\n        }\n      ]\n    default:\n      return state;\n  }\n};\n\nexport default addMessage;\n","import {combineReducers} from 'redux';\nimport saveCode from './containers/leftPanel/reducer';\nimport addMessage from './containers/rightPanel/reducer';\n\nexport default combineReducers({\n  saveCode,\n  addMessage,\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nstore.subscribe(() => console.log(store.getState(),\"-------\"))\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n","export const ADD_MESSAGE = 'ADD_MESSAGE'","import React, { Component, Fragment } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { addMessage } from \"./actions\";\nimport ChatBox from \"../chatBox\";\nimport \"../../scripts/main\";\n\nclass RightPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      message: \"\",\n      messageCount: 0,\n      loading: false\n    };\n    this.messageSubmit = this.messageSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ code: nextProps.code });\n  }\n\n  async messageSubmit(e) {\n    var code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      if (this.state.code.length === 0) {\n        alert(\"Please Pass a function\");\n        this.setState({message:''})\n      } else {\n        this.setState({\n          messageCount: this.state.messageCount + 1,\n          message: \"\",\n          loading: true\n        });\n        this.props.addMessage(e.target.value);\n        await this.evaluateCode(this.state.code, e.target.value);\n        let scrollHeight = document.getElementById(\"chat-box\");\n        scrollHeight.scrollTop = scrollHeight.scrollHeight;\n\n\n      }\n    }\n  }\n\n  async evaluateCode(code, message) {\n    var regex = /^[0-9]+$/;\n    try {\n      if (message.match(regex)) {\n        // eslint-disable-next-line\n        let value = await eval(`(${code})(${message})`);\n        this.props.addMessage(value);\n        await this.setState({ loading: false });\n        return value;\n      } else {\n        const _message = message.replace(/\"/g, \"'\");\n        // eslint-disable-next-line\n        let value = await eval(`(${code})(\"${_message}\")`);\n        this.props.addMessage(value);\n        await this.setState({ loading: false });\n        return value;\n      }\n    } catch (err) {\n      this.props.addMessage(\"Oops! \" + err.toString());\n      await this.setState({ loading: false });\n      return \"NIL\";\n    }\n  }\n\n  render() {\n    const { messageCount, message, loading } = this.state;\n    const { messages } = this.props;\n    return (\n      <Fragment>\n        <ChatBox\n          code={this.props.code}\n          messageCount={messageCount}\n          messages={messages}\n          loading={loading}\n        />\n        <div className={\"messageBox\"}>\n          <div className={\"Rectangle-3\"}>\n            <div style={{ width: \"100%\" }}>\n              <input\n                type=\"text\"\n                disabled={loading ? true : false}\n                value={message}\n                onChange={e => {\n                  this.setState({ message: e.target.value });\n                }}\n                placeholder=\"Your Message Here\"\n                className={\"Type-message-here\"}\n                onKeyPress={this.messageSubmit}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    code: state.saveCode.get(\"active\")[\"code\"],\n    messages: state.addMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMessage: payload => {\n      dispatch(addMessage(payload));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RightPanel);\n","import {ADD_MESSAGE} from './constants'\n\nexport const addMessage = (message) => {\n    return {\n        type:ADD_MESSAGE,\n        message\n    }\n}","import React from 'react';\nimport './styles.css';\n\nconst LoadingDots = () => {\n  return (\n    <div className=\"wave\">\n      <span className=\"dot1\" />\n      <span className=\"dot2\" />\n      <span className=\"dot3\" />\n    </div>\n  );\n};\n\nexport default LoadingDots;\n","import React, { Component ,Fragment} from 'react';\nimport LoadingDots from '../../components/loadingDots';\nimport classnames from 'classnames';\nimport \"./styles.css\"\n\nclass ChatBox extends Component{\n\n    render(){\n        const {code,messageCount,messages,loading} = this.props\n        return(\n            <div className={'chatBox'} id='chat-box'>\n          {code.length > 0 && messageCount > 0 ? (\n            <Fragment>\n              {messages.map((msg, index) => {\n                return (\n                  <div\n                    className={\n                      index % 2 === 0\n                        ? 'chats'\n                        : classnames('chats', 'chat-right')\n                    }\n                    key={index}>\n                    <img\n                      src={\n                        'http://images.clipartpanda.com/user-clipart-acspike_male_user_icon.png'\n                      }\n                      alt=''\n                      width={'26px'}\n                      height={'24px'}\n                      style={{borderRadius: '50%'}}\n                    />\n                    <div className={\n                      index % 2 === 0\n                        ? 'chats-msg'\n                        : classnames('chats-msg', 'chats-msg-right')\n                    }>{msg.message}</div>\n                  </div>\n                );\n              })}\n            </Fragment>\n          ) : null}\n          {loading ? (\n            <div className={classnames('chats', 'chat-right')}>\n              <img\n                src={\n                  'http://images.clipartpanda.com/user-clipart-acspike_male_user_icon.png'\n                }\n                alt=''\n                width={'26px'}\n                height={'24px'}\n                style={{borderRadius: '50%'}}\n              />\n              <div className={'chat-msg-loading'}>\n                <LoadingDots />\n              </div>\n            </div>\n          ) : null}\n        </div>\n        )\n    }\n}\n\nexport default ChatBox;","class Jayesh {\n  getValue(params) {\n    console.log(params,\"-----.\")\n    const url = `https://rest.coinapi.io/v1/exchangerate/BTC?apikey=20E9EFAC-2D10-4307-BF4E-EC5B6C605341`;\n    return fetch(url)\n      .then(resp => resp.json())\n      .then(data => {\n        return data[\"asset_id_base\"];\n      });\n  }\n\n  translate(params) {\n    return fetch(\n      `https://translation.googleapis.com/language/translate/v2?key=AIzaSyDV3nONSsyotA2t67H6S-Jo963SQx8HGms&q=${params}&target=es`,\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    )\n      .then(resp => resp.json())\n      .then(data => {\n        try{\n          return data.data.translations[0].translatedText;\n        }catch(err){\n          return 'Oops something happened'\n        }\n        \n      });\n  }\n}\n\nvar jayesh = new Jayesh();\nwindow.jayesh = jayesh;\n"],"sourceRoot":""}