{"version":3,"sources":["components/codeEditor/index.js","components/tabs/index.js","components/image/index.js","components/button/index.js","containers/leftPanel/index.js","containers/leftPanel/actions.js","containers/leftPanel/constants.js","components/header/index.js","containers/main/index.js","App.js","serviceWorker.js","containers/leftPanel/reducer.js","containers/rightPanel/reducer.js","reducers.js","index.js","containers/rightPanel/constants.js","containers/rightPanel/index.js","containers/rightPanel/actions.js","components/loadingDots/index.js","containers/chatBox/index.js","scripts/main.js"],"names":["CodeEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","newValue","e","setState","defineProperty","concat","activeTab","onCodeChange","editorDidMount","editor","changeEditorValue","changeBySetState","code","state","react_default","a","createElement","style","height","lib_default","language","theme","value","options","selectOnLineNumbers","roundedSelection","readOnly","cursorStyle","automaticLayout","Component","Tabs","_ref","tabsCount","changeActiveTab","map","tab","index","className","classnames","onClick","Image","src","classname","alt","Button","applyChangeButtonClick","disabled","children","LeftPanel","isCodeUpdated","bind","assertThisInitialized","tabIndex","onApplyChangesClicked","_this2","_this$state","react","tabs","toConsumableArray","length","components_image","_this$state2","dist","column","tabsContainer","float","components_button","codeEditor","connect","dispatch","type","saveCode","Header","title","Main","w","header","leftPanel","rightPanel","App","main","Boolean","window","location","hostname","match","initialState","fromJS","arguments","undefined","action","set","addMessage","ADD_MESSAGE","message","combineReducers","store","createStore","rootReducer","subscribe","console","log","getState","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","d","__webpack_exports__","RightPanel","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","messageCount","loading","messageSubmit","_Users_jayesh_Documents_ai_playground_cra_ai_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","nextProps","keyCode","which","target","evaluateCode","regex","eval","_message","replace","_context","t0","toString","messages","react__WEBPACK_IMPORTED_MODULE_8___default","react__WEBPACK_IMPORTED_MODULE_8__","_chatBox__WEBPACK_IMPORTED_MODULE_12__","width","placeholder","onKeyPress","mapStateToProps","get","mapDispatchToProps","payload","_constants__WEBPACK_IMPORTED_MODULE_0__","LoadingDots","ChatBox","_this$props","msg","key","borderRadius","loadingDots","jayesh","params","url","fetch","resp","json","data"],"mappings":"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","file":"static/js/main.05157066.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport MonacoEditor from 'react-monaco-editor';\n\nclass CodeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '// type your code... \\n',\n    };\n  }\n\n  onChange = (newValue, e) => {\n    this.setState({[`Tab${this.props.activeTab}`]:newValue});\n    this.props.onCodeChange(newValue);\n  };\n\n  editorDidMount = (editor) => {\n    this.editor = editor;\n  };\n\n  changeEditorValue = () => {\n    if (this.editor) {\n      this.setState('// code changed! \\n');\n    }\n  };\n\n  changeBySetState = () => {\n    this.setState({code: '// code changed by setState! \\n'});\n  };\n\n  render() {\n    const {code} = this.state;\n    const options = {\n      selectOnLineNumbers: true,\n      roundedSelection: false,\n      readOnly: false,\n      cursorStyle: 'line',\n      automaticLayout: true,\n    };\n    return (\n      <div style={{height: '100vH'}}>\n        <MonacoEditor\n          language=\"javascript\"\n          theme=\"vs-dark\"\n          value={this.state[`Tab${this.props.activeTab}`]||code}\n          options={options}\n          onChange={this.onChange}\n          editorDidMount={this.editorDidMount}\n        />\n      </div>\n    );\n  }\n}\nexport default CodeEditor;\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport const Tabs = ({tabsCount,activeTab, changeActiveTab}) => {\n    return (\n        tabsCount.map((tab, index) => {\n            return (\n              <button\n                className={classnames(\n                  'tabsButton',\n                  activeTab === index ? 'activeTab' : '',\n                )}\n                onClick={()=>changeActiveTab(index)}>\n                <div className={'tabsButtonText'}>{tab}</div>\n              </button>\n            );\n          })\n    )\n}\n\nexport default Tabs;","import React from 'react';\nimport './styles.css'\n\nexport const Image = ({src, classname}) => {\n    return (\n        <img src={src} className={classname} alt=''/>\n    )\n}\n\nexport default Image;","import React from 'react';\n\nexport const Button = ({classname,applyChangeButtonClick,disabled, children}) => {\n    return (\n        <button className={classname} disabled={disabled} onClick={()=>applyChangeButtonClick()} >\n        {children}\n        </button>\n    )\n}\nexport default Button;","import React, {Component, Fragment} from 'react';\nimport CodeEditor from '../../components/codeEditor';\nimport {Flex} from 'reflexbox';\nimport {connect} from 'react-redux';\nimport {saveCode} from './actions';\nimport Tabs from '../../components/tabs';\nimport Image from '../../components/image';\nimport Button from '../../components/button';\n\nimport './styles.css';\n\nclass LeftPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCodeUpdated: false,\n      code: '',\n      tabsCount: ['Tab1', 'Tab2', 'Tab3'],\n      activeTab: 0,\n    };\n    this.onCodeChange = this.onCodeChange.bind(this);\n    this.changeActiveTab = this.changeActiveTab.bind(this);\n    this.applyChangeButtonClick = this.applyChangeButtonClick.bind(this);\n  }\n\n  onCodeChange(code) {\n    this.setState({isCodeUpdated: true, code: code});\n  }\n\n  changeActiveTab(tabIndex) {\n    this.setState({activeTab: tabIndex});\n  }\n\n  applyChangeButtonClick() {\n    this.setState({isCodeUpdated: false});\n    this.props.onApplyChangesClicked(this.state.code);\n  }\n\n  tabsContainer() {\n    const {tabsCount, activeTab} = this.state;\n    return (\n      <Fragment>\n        <Tabs\n          tabsCount={tabsCount}\n          activeTab={activeTab}\n          changeActiveTab={this.changeActiveTab}\n        />\n        <span\n          className={'addTab'}\n          onClick={() =>\n            this.setState({\n              tabsCount: [\n                ...this.state.tabsCount,\n                `Tab${tabsCount.length + 1}`,\n              ],\n            })\n          }>\n          <Image\n            classname={'addTabIcon'}\n            src=\"./icons/shape@3x.png\"\n          />\n        </span>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {isCodeUpdated,activeTab} = this.state;\n    return (\n      <Flex column>\n        <div className={'tabs'}>\n          {this.tabsContainer()}\n          <span style={{float: 'right'}}>\n            <Button\n              classname={\n                isCodeUpdated ? 'applyChangeActive' : 'applyChangeDisabled'\n              }\n              disabled={isCodeUpdated ? false : true}\n              applyChangeButtonClick={this.applyChangeButtonClick}>\n              <Image\n                src={'./icons/refresh@3x.png'}\n                classname={'applyChangeButtonIcon'}\n              />\n              Apply Changes\n            </Button>\n          </span>\n        </div>\n        <div className={'editorContainer'}>\n          <CodeEditor onCodeChange={this.onCodeChange} activeTab={activeTab}/>\n        </div>\n      </Flex>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => state;\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onApplyChangesClicked: (code) => {\n      dispatch(saveCode(code));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LeftPanel);\n","import {APPLY_CODE_CHANGES} from './constants'\n\nexport const saveCode = (code) => {\n    return {\n        type:APPLY_CODE_CHANGES,\n        code:code,\n    }\n}","export const APPLY_CODE_CHANGES = 'APPLY_CODE_CHANGES'","import React from 'react';\nimport './styles.css'\n\nconst Header = ({title}) => {\n    return (\n        <div className={'header'}>\n            <div className={'header-title'}>\n              {title}\n            </div>\n          </div>\n    )\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {Flex, Box} from 'reflexbox';\nimport RightPanel from '../rightPanel';\nimport LeftPanel from '../leftPanel';\nimport Header from '../../components/header';\nimport './styles.css';\n\nclass Main extends Component {\n  render() {\n    return (\n      <Flex column>\n        <Box w={1}>\n          <Header title={'AI Playground'}/>\n        </Box>\n        <Box w={1}>\n          <Flex>\n            <Box w={2 / 5} className={'ide'}>\n              <LeftPanel/> \n            </Box>\n            <Box w={3 / 5} className={'bot'}>\n            <RightPanel/>\n            </Box>\n          </Flex>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default Main;\n","import React, {Component} from 'react';\n// eslint-disable-next-line import/no-unresolved, import/extensions\n/* eslint-enable import/no-extraneous-dependencies */\nimport Main from './containers/main';\n// Using with webpack\nclass App extends Component {\n    render() {\n        return <Main />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {APPLY_CODE_CHANGES} from './constants';\nimport {fromJS} from 'immutable';\n\nconst initialState = fromJS({\n  code:''\n});\n\nconst saveCode = (state = initialState, action) => {\n  switch (action.type) {\n    case APPLY_CODE_CHANGES:\n      return state.set('code',action.code);\n    default:\n      return state;\n  }\n};\n\nexport default saveCode;\n","import {ADD_MESSAGE} from './constants';\n\nconst addMessage = (state = [], action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return [\n        ...state,\n        {\n          message:action.message\n        }\n      ]\n    default:\n      return state;\n  }\n};\n\nexport default addMessage;\n","import {combineReducers} from 'redux';\nimport saveCode from './containers/leftPanel/reducer';\nimport addMessage from './containers/rightPanel/reducer';\n\nexport default combineReducers({\n  saveCode,\n  addMessage,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer)\nstore.subscribe(() => console.log(store.getState()))\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n","export const ADD_MESSAGE = 'ADD_MESSAGE'","import React, {Component, Fragment} from 'react';\nimport './styles.css';\nimport {connect} from 'react-redux';\nimport {addMessage} from './actions';\nimport ChatBox from '../chatBox'\nimport '../../scripts/main';\n\nclass RightPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '',\n      message: '',\n      messageCount: 0,\n      loading: false,\n    };\n    this.messageSubmit = this.messageSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({code: nextProps.code});\n  }\n\n  messageSubmit(e) {\n    var code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      this.setState({\n        messageCount: this.state.messageCount + 1,\n        message: '',\n        loading: true,\n      });\n      this.props.addMessage(e.target.value);\n      this.evaluateCode(this.state.code, e.target.value);\n    }\n  }\n\n  async evaluateCode(code, message) {\n    var regex = /^[0-9]+$/;\n    try {\n      if (message.match(regex)) {\n        // eslint-disable-next-line\n        let value = await eval(`(${code})(${message})`);\n        this.props.addMessage(value);\n        this.setState({loading: false});\n        return value;\n      } else {\n        const _message = message.replace(/\"/g, \"'\");\n        // eslint-disable-next-line\n        let value = await eval(`(${code})(\"${_message}\")`);\n        this.props.addMessage(value);\n        this.setState({loading: false});\n        return value;\n      }\n    } catch (err) {\n      this.props.addMessage('Oops! ' + err.toString());\n      this.setState({loading: false});\n      return 'NIL';\n    }\n  }\n\n  render() {\n    const {messageCount, message, loading} = this.state;\n    const {messages} = this.props;\n    return (\n      <Fragment>\n        <ChatBox code={this.props.code} messageCount={messageCount} messages={messages} loading={loading}/> \n        <div className={'messageBox'}>\n          <div className={'Rectangle-3'}>\n            <div style={{width: '100%'}}>\n              <input\n                type=\"text\"\n                disabled={loading?true:false}\n                value={message}\n                onChange={(e) => {\n                  this.setState({message: e.target.value});\n                }}\n                placeholder=\"Your Message Here\"\n                className={'Type-message-here'}\n                onKeyPress={this.messageSubmit}\n              />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {code: state.saveCode.get('code'), messages: state.addMessage};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (payload) => {\n      dispatch(addMessage(payload));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RightPanel);\n","import {ADD_MESSAGE} from './constants'\n\nexport const addMessage = (message) => {\n    return {\n        type:ADD_MESSAGE,\n        message\n    }\n}","import React from 'react';\nimport './styles.css';\n\nconst LoadingDots = () => {\n  return (\n    <div className=\"wave\">\n      <span className=\"dot1\" />\n      <span className=\"dot2\" />\n      <span className=\"dot3\" />\n    </div>\n  );\n};\n\nexport default LoadingDots;\n","import React, { Component ,Fragment} from 'react';\nimport LoadingDots from '../../components/loadingDots';\nimport classnames from 'classnames';\nimport \"./styles.css\"\n\nclass ChatBox extends Component{\n\n    render(){\n        const {code,messageCount,messages,loading} = this.props\n        return(\n            <div className={'chatBox'}>\n          {code.length > 0 && messageCount > 0 ? (\n            <Fragment>\n              {messages.map((msg, index) => {\n                return (\n                  <div\n                    className={\n                      index % 2 === 0\n                        ? 'chats'\n                        : classnames('chats', 'chat-right')\n                    }\n                    key={index}>\n                    <img\n                      src={\n                        'http://images.clipartpanda.com/user-clipart-acspike_male_user_icon.png'\n                      }\n                      alt=''\n                      width={'26px'}\n                      height={'24px'}\n                      style={{borderRadius: '50%'}}\n                    />\n                    <div className={\n                      index % 2 === 0\n                        ? 'chats-msg'\n                        : classnames('chats-msg', 'chats-msg-right')\n                    }>{msg.message}</div>\n                  </div>\n                );\n              })}\n            </Fragment>\n          ) : null}\n          {loading ? (\n            <div className={classnames('chats', 'chat-right')}>\n              <img\n                src={\n                  'http://images.clipartpanda.com/user-clipart-acspike_male_user_icon.png'\n                }\n                alt=''\n                width={'26px'}\n                height={'24px'}\n                style={{borderRadius: '50%'}}\n              />\n              <div className={'chat-msg-loading'}>\n                <LoadingDots />\n              </div>\n            </div>\n          ) : null}\n        </div>\n        )\n    }\n}\n\nexport default ChatBox;","class Jayesh {\n  getValue(params) {\n    const url = `https://rest.coinapi.io/v1/exchangerate/BTC?apikey=20E9EFAC-2D10-4307-BF4E-EC5B6C605341`;\n    return fetch(url)\n      .then((resp) => resp.json())\n      .then((data) => {\n        return url;\n      })\n  }\n}\n\nvar jayesh = new Jayesh();\nwindow.jayesh = jayesh;\n"],"sourceRoot":""}